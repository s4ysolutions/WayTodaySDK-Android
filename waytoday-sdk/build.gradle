plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
    id "com.jfrog.bintray" version "1.8.5"
    id 'com.google.protobuf'
}

ext {
   releaseVersion = System.getenv('RELEASE_VERSION') ?: '1.0.17'
}

group 'solutions.s4y.waytoday.sdk'
version releaseVersion

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "int", "GRPC_PORT", "9101"
            buildConfigField "int", "GRPC_PORT_PLAIN", "9001"
            buildConfigField "String", "GRPC_HOST", "\"tracker.way.today\""
        }
        release {
            minifyEnabled false
            buildConfigField "int", "GRPC_PORT", "9101"
            buildConfigField "int", "GRPC_PORT_PLAIN", "9001"
            buildConfigField "String", "GRPC_HOST", "\"tracker.way.today\""
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.grpc:grpc-protobuf-lite:1.32.1'
    implementation 'io.grpc:grpc-stub:1.32.1'
    implementation 'io.grpc:grpc-okhttp:1.32.1'
    api 'com.maddevsio.mad-location-manager:mad-location-manager:0.1.14'

    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'com.google.truth:truth:1.0.1'
    testImplementation 'org.robolectric:robolectric:4.4'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

task sourceJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task androidJavadocs(type: Javadoc, dependsOn: build) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
        source += [file("$buildDir/generated/source/proto/$variant.name/grpc"),
                   file("$buildDir/generated/source/proto/$variant.name/java"),
                   file("$buildDir/generated/source/buildConfig/$variant.name")]
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task javadocJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.13.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.32.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
            task.plugins {
                grpc {
                    option "lite"
                }
            }
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            WayTodaySDKPublication(MavenPublication) {
                groupId = 'solutions.s4y.waytoday'
                artifactId = 'waytoday-sdk'
                version = releaseVersion

                from components.release
                artifact sourceJar
                artifact javadocJar

                pom {
                    packaging 'aar'
                    name = 'WayToday SDK for Android'
                    description = 'Android GPS tracker, WayToday ID and Upload services'
                    url = 'https://github.com/s4ysolutions/WayTodaySDK-Android'
                    licenses {
                        license {
                            name = 'Apache License 2.0'
                            url = 'https://github.com/s4ysolutions/WayTodaySDK-Android/blob/main/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'dsame'
                            name = 'Sergey Dolin'
                            email = 'sergey@s4y.solutions'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/s4ysolutions/WayTodaySDK-Android.git'
                        developerConnection = 'scm:git:ssh://ithub.com/s4ysolutions/WayTodaySDK-Android.git'
                        url = 'https://github.com/s4ysolutions/WayTodaySDK-Android'
                    }
                }
            }
        }
    }
}

bintray {
    dryRun = false
    publish = true
    override = true
    user = System.getenv('BINTRAY_USER') ?: bintrayUser
    key = System.getenv('BINTRAY_KEY') ?: bintrayKey
    publications = ['WayTodaySDKPublication']

    pkg {
        repo = 'maven'
        name = 'waytoday-sdk'
        userOrg = 's4ysolutions'
        description = 'Android GPS tracker, WayToday ID and Upload services'
        publications = ['WayTodaySDKPublication']
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/s4ysolutions/WayTodaySDK-Android.git'
        websiteUrl = 'https://github.com/s4ysolutions/WayTodaySDK-Android.git'
        issueTrackerUrl = 'https://github.com/s4ysolutions/WayTodaySDK-Android/issues'
        githubRepo = 's4ysolutions/WayTodaySDK-Android'
        githubReleaseNotesFile = 'README.md'
        version {
            name = releaseVersion
            desc = 'WayToday SDK for Android v' + releaseVersion
            released = new Date()
            vcsTag = releaseVersion
        }
    }
}

